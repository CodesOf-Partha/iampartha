{"version":3,"sources":["Assets/Images/Home/home.png","Assets/Images/Gif/partha_multitasking.gif","Assets/Images/Experience/springworks.png","Assets/Images/Experience/iitm-logo.png","Components/NavbarDesign.jsx","Context/CommonContext.jsx","Components/Home.jsx","Components/Experience.jsx","Components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","NavbarDesign","useState","isOpen","setIsOpen","Navbar","color","light","expand","sticky","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","CommonContext","createContext","Home","className","src","require","Jumbotron","fluid","Container","Button","variant","endIcon","Experience","hrAnimation","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","iitmAnimation","analytics","options","height","width","App","status","useContext","LinearProgress","value","Boolean","window","location","hostname","match","ReactDOM","render","children","setStatus","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iIAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,uNCe5B,SAASC,IAAgB,IAAD,EACPC,oBAAS,GADF,mBAC5BC,EAD4B,KACpBC,EADoB,KAKnC,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAAKC,QAAM,GAC1C,kBAACC,EAAA,EAAD,CAAaC,KAAK,KAAlB,6BACA,kBAACC,EAAA,EAAD,CAAeC,QANZ,kBAAMT,GAAWD,MAOpB,kBAACW,EAAA,EAAD,CAAUX,OAAQA,EACdY,QAAM,GACN,kBAACC,EAAA,EAAD,CAAKD,QAAM,GACP,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASP,KAAK,gBAAd,eAEJ,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASP,KAAK,4CAAd,WAEJ,kBAACQ,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAC9B,kBAACC,EAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,GAAzB,WAGA,kBAACC,EAAA,EAAD,CAAcC,OAAK,GACf,kBAACC,EAAA,EAAD,iBAGA,kBAACA,EAAA,EAAD,iBAGA,kBAACA,EAAA,EAAD,CAAcC,SAAO,IACrB,kBAACD,EAAA,EAAD,oB,aC5CnBE,EAAgBC,0B,4CCGd,SAASC,IACpB,OACI,6BACA,yBAAKC,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,YACXC,IACIC,EAAQ,QAGpB,yBAAKF,UAAU,4BACX,kBAACG,EAAA,EAAD,CAAWH,UAAU,OAAOI,OAAK,GAC7B,kBAACC,EAAA,EAAD,CAAWD,OAAK,GACZ,gDACA,6EAAkD,6BAAlD,4DAGA,kBAACE,EAAA,EAAD,CAAQC,QAAQ,YAAYP,UAAU,aAClCQ,QAAS,kBAAC,IAAD,OADb,qBAOR,yBAAKR,UAAU,qBACXC,IACIC,EAAQ,U,qCCvBjB,SAASO,IACpB,IAAMC,EAAc,CAChBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,CACdC,oBAAqB,mBAGvBC,EAAgB,CAClBL,MAAM,EACNC,UAAU,EACVC,cAAeI,EACfH,iBAAkB,CACdC,oBAAqB,mBAG7B,OACI,6BACA,yBAAKf,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,yBACX,4CAGR,yBAAKA,UAAU,OACf,yBAAKA,UAAU,4BACf,kBAACG,EAAA,EAAD,CAAWH,UAAU,YAAYI,OAAK,GAClC,kBAACC,EAAA,EAAD,CAAWD,OAAK,GACZ,yBAAKJ,UAAU,sCACXC,IACIC,EAAQ,OAEhB,kBAAC,IAAD,CAAQgB,QAASR,EACbS,OAAQ,IACRC,MAAO,MAEX,wBAAIpB,UAAU,QAAd,wBACA,+CACA,kDACA,wEAA6C,6BAA7C,WACQ,0BAAMA,UAAU,oBAAhB,KADR,gBACgE,0BAAMA,UAAU,oBAAhB,KADhE,mBAC2H,0BAAMA,UAAU,oBAAhB,KAD3H,iBACoL,0BAAMA,UAAU,oBAAhB,KADpL,kBAEA,kBAACM,EAAA,EAAD,CAAQC,QAAQ,YAAYP,UAAU,aAClCQ,QAAS,kBAAC,IAAD,OADb,wBAOZ,yBAAKR,UAAU,4BACX,kBAACG,EAAA,EAAD,CAAWH,UAAU,YAAYI,OAAK,GAClC,kBAACC,EAAA,EAAD,CAAWD,OAAK,GACZ,yBAAKJ,UAAU,2BACXC,IACIC,EAAQ,OAEhB,kBAAC,IAAD,CAAQgB,QAASF,EACbG,OAAQ,IACRC,MAAO,MACX,wBAAIpB,UAAU,QAAd,mCACA,4CACA,mDACA,qCAAU,6BAAV,WACQ,0BAAMA,UAAU,oBAAhB,KADR,aAC6D,0BAAMA,UAAU,oBAAhB,KAD7D,0BAC+H,0BAAMA,UAAU,oBAAhB,KAD/H,gBACuL,0BAAMA,UAAU,oBAAhB,KADvL,mBAEA,kBAACM,EAAA,EAAD,CAAQC,QAAQ,YAAYP,UAAU,aAClCQ,QAAS,kBAAC,IAAD,OADb,8BClDTa,MAhBf,WAAgB,IACNC,EHMCC,qBAAW1B,GGNZyB,OACR,OACE,yBAAKtB,UAAU,OACb,kBAACwB,EAAA,EAAD,CAAgBjB,QAAQ,cAAckB,MAAOH,EAAQ/C,MAAM,cAC3D,kBAAC,EAAD,MACA,yBAAKyB,UAAU,OACb,yBAAKA,UAAU,aACb,kBAACD,EAAD,MACA,kBAACU,EAAD,UCJUiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAASC,OAAO,mBLJc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAChB9D,mBAAS,GADO,mBACrCmD,EADqC,KAC7BY,EAD6B,KAE5C,OACI,kBAACrC,EAAcsC,SAAf,CAAwBV,MAAO,CAACH,SAAQY,cACrCD,KKAK,KAAgB,kBAAC,EAAD,OAA0BG,SAASC,eAAe,SD2H5E,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.8e084288.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.af064e1e.png\";","module.exports = __webpack_public_path__ + \"static/media/partha_multitasking.e9ec2577.gif\";","module.exports = __webpack_public_path__ + \"static/media/springworks.818e62d8.png\";","module.exports = __webpack_public_path__ + \"static/media/iitm-logo.68f4a0d0.png\";","import React, {useState} from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\n\nexport default function NavbarDesign() {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\" sticky>\n                <NavbarBrand href=\"/\">Parthasarathi's Portfolio</NavbarBrand>\n                <NavbarToggler onClick={toggle}/>\n                <Collapse isOpen={isOpen}\n                    navbar>\n                    <Nav navbar>\n                        <NavItem>\n                            <NavLink href=\"/components/\">Components</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n                        </NavItem>\n                        <UncontrolledDropdown nav inNavbar>\n                            <DropdownToggle nav caret>\n                                Options\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem>\n                                    Option 1\n                                </DropdownItem>\n                                <DropdownItem>\n                                    Option 2\n                                </DropdownItem>\n                                <DropdownItem divider/>\n                                <DropdownItem>\n                                    Reset\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </div>\n    )\n}\n","import React, { createContext, useState, useContext } from 'react';\n\nexport const CommonContext = createContext();\n\nexport const CommonProvider = ({ children }) => {\n    const [status, setStatus] = useState(0);\n    return (\n        <CommonContext.Provider value={{status, setStatus}}>\n          {children}\n        </CommonContext.Provider>\n      );\n}\n\nexport const useCommonContext = () => {\n    return useContext(CommonContext);\n  };","import React from 'react';\nimport {Jumbotron, Container} from 'reactstrap';\nimport {Button, Icon} from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nexport default function Home() {\n    return (\n        <div>\n        <div className='row'>\n            <div className='col-lg-6 text-center p-5'>\n                <img className=\"img-fluid\"\n                    src={\n                        require(\"../Assets/Images/Home/home.png\")\n                    }/>\n            </div>\n            <div className='col-lg-6 text-center p-5'>\n                <Jumbotron className=\"mb-0\" fluid>\n                    <Container fluid>\n                        <h1>Parthasarathi RV</h1>\n                        <p>Full Stack Developer ( MERN ) @ Springworks Inc<br/>\n                            Former Research and Development Intern from IIT - Madras\n                        </p>\n                        <Button variant=\"contained\" className=\"btn-purple\"\n                            endIcon={<ChevronRightIcon/>}>\n                            Join for coffee\n                        </Button>\n                    </Container>\n                </Jumbotron>\n\n                <img className=\"img-fluid home-gif\"\n                    src={\n                        require(\"../Assets/Images/Gif/partha_multitasking.gif\")\n                    }/>\n            </div>\n        </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport {Jumbotron, Container} from 'reactstrap';\nimport Lottie from 'react-lottie';\nimport animationData from '../Assets/Lotties/hr.json';\nimport analytics from '../Assets/Lotties/analytics.json';\nimport {Button} from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nexport default function Experience() {\n    const hrAnimation = {\n        loop: true,\n        autoplay: true,\n        animationData: animationData,\n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n    const iitmAnimation = {\n        loop: true,\n        autoplay: true,\n        animationData: analytics,\n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n    return (\n        <div>\n        <div className=\"row p-5\">\n            <div className='col-lg-12'>\n                <div className='row mb-5'>\n                    <div className='col-lg-12 text-center'>\n                        <h1>Experience</h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-lg-6 text-center p-4\">\n                <Jumbotron className=\"mb-0 pt-5\" fluid>\n                    <Container fluid>\n                        <img className=\"img-fluid experience-logo-size mb-5\"\n                            src={\n                                require(\"../Assets/Images/Experience/springworks.png\")\n                            }/>\n                        <Lottie options={hrAnimation}\n                            height={250}\n                            width={250}\n                            />\n                        <h2 className='mt-3'>Full Stack Developer</h2>\n                        <h3>SpringWorks Inc</h3>\n                        <h4>Sep 2019 - Present</h4>\n                        <p>Full Stack Developer Working on MERN Stack<br />\n                        ( &ensp;<span className=\"highlight-Letter\">M</span>ongoDB &ensp;<span className=\"highlight-Letter\">E</span>xpress.JS &ensp;<span className=\"highlight-Letter\">R</span>eact.js &ensp;<span className=\"highlight-Letter\">N</span>ode.js &ensp;)</p>\n                        <Button variant=\"contained\" className=\"btn-purple\"\n                            endIcon={<ChevronRightIcon/>}>\n                            Checkout our work\n                        </Button>\n                    </Container>\n                </Jumbotron>\n            </div>\n            <div className=\"col-lg-6 text-center p-4\">\n                <Jumbotron className=\"mb-0 pt-5\" fluid>\n                    <Container fluid>\n                        <img className=\"img-fluid iitm-logo mb-4\"\n                            src={\n                                require(\"../Assets/Images/Experience/iitm-logo.png\")\n                            }/>\n                        <Lottie options={iitmAnimation}\n                            height={200}\n                            width={200}/>\n                        <h2 className='mt-5'>Research and Development Intern</h2>\n                        <h3>IIT - Madras</h3>\n                        <h4>Feb 2019 - Aug 2019</h4>\n                        <p>DA & ML<br />\n                        (&ensp; <span className=\"highlight-Letter\">D</span>ata &ensp;<span className=\"highlight-Letter\">A</span>nalytics &ensp;&&ensp; <span className=\"highlight-Letter\">M</span>achine &ensp;<span className=\"highlight-Letter\">L</span>earning &ensp;)</p>\n                        <Button variant=\"contained\" className=\"btn-purple\"\n                            endIcon={<ChevronRightIcon/>}>\n                            Newspaper Coverages\n                        </Button>\n                    </Container>\n                </Jumbotron>\n            </div>\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport Navbar from './NavbarDesign';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {useCommonContext} from '../Context/CommonContext';\nimport HomeComponent from '../Components/Home';\nimport ExperienceComponent from '../Components/Experience';\n\nfunction App() {\n  const { status } = useCommonContext();\n  return (\n    <div className=\"App\">\n      <LinearProgress variant=\"determinate\" value={status} color=\"secondary\" />\n      <Navbar />\n      <div className='row'>\n        <div className='col-lg-12'>\n          <HomeComponent />\n          <ExperienceComponent />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { CommonProvider } from './Context/CommonContext';\nimport './Styles/style.scss';\n\nReactDOM.render(<CommonProvider><App /></CommonProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}